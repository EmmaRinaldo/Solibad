generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  name      String
  lastname  String
  password  String
  telephone String
  country   String
  city      String
  language  String?
  currency  String?
  bids      Bid[]
  // NextAuth fields
  emailVerified DateTime?
  sessions      Session[]
  accounts      Account[]
}

model Admin {
  id       String    @id @default(cuid())
  email    String    @unique
  password String
}


model Account {
  id                String   @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  userId            String?
  user              User?    @relation(fields: [userId], references: [id])
  access_token      String?
  refresh_token     String?
  expires_at        Int?
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String?
  user         User?    @relation(fields: [userId], references: [id])
  expires      DateTime
}

model Auction {
  id          String    @id @default(cuid())
  title       String
  description String
  startPrice  Float
  startDate   DateTime  @default(now())
  endDate     DateTime  @default(dbgenerated("now() + interval '1 day'")) // TODO: Make it 1 day from startDate
  minIncr     Float
  ActualBid   Float     @default(0)
  FinishedBid Float?
  winnerId    String?
  bids        Bid[]
}

model Bid {
  id        String   @id @default(cuid())
  userId    String
  auctionId String
  lastBid   Float
  bidLimit  Float?
  autoIncr  Float?
  bidedAt DateTime @default(now())
  
  auction   Auction  @relation(fields: [auctionId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
